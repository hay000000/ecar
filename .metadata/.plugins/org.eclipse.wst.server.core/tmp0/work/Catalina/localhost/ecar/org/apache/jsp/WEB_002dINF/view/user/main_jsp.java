/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.39
 * Generated at: 2021-03-18 05:42:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("fn:length", org.apache.taglibs.standard.functions.Functions.class, "length", new Class[] {java.lang.Object.class});
}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.0.20.RELEASE.jar", Long.valueOf(1611882246866L));
    _jspx_dependants.put("jar:file:/C:/Users/sa365/Desktop/springworkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ecar/WEB-INF/lib/spring-webmvc-5.0.20.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1607468138000L));
    _jspx_dependants.put("jar:file:/C:/Users/sa365/Desktop/springworkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ecar/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/view/jspHeader.jsp", Long.valueOf(1615444252418L));
    _jspx_dependants.put("jar:file:/C:/Users/sa365/Desktop/springworkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ecar/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1609913827220L));
    _jspx_dependants.put("jar:file:/C:/Users/sa365/Desktop/springworkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ecar/WEB-INF/lib/spring-webmvc-5.0.20.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1607468138000L));
    _jspx_dependants.put("jar:file:/C:/Users/sa365/Desktop/springworkspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ecar/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>다음 지도 API</title>\r\n");
      out.write("<style>\r\n");
      out.write("    .wrap {position: absolute;left: 0;bottom: 40px;width: 400px;height: 100px;margin-left: -144px;text-align: left;overflow: hidden;font-size: 12px;font-family: 'Malgun Gothic', dotum, '돋움', sans-serif;line-height: 1.5;}\r\n");
      out.write("    .wrap * {padding: 0;margin: 0;}\r\n");
      out.write("    .wrap .info {width: 400px;height: 120px;border-radius: 5px;border-bottom: 2px solid #ccc;border-right: 1px solid #ccc;overflow: hidden;background: #fff;}\r\n");
      out.write("    .wrap .info:nth-child(1) {border: 0;box-shadow: 0px 1px 2px #888;}\r\n");
      out.write("    .info .title {padding: 5px 0 0 10px;height: 30px;background: #eee;border-bottom: 1px solid #ddd;font-size: 18px;font-weight: bold;}\r\n");
      out.write("    .info .close {position: absolute;top: 10px;right: 10px;color: #888;width: 17px;height: 17px;background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/overlay_close.png');}\r\n");
      out.write("    .info .close:hover {cursor: pointer;}\r\n");
      out.write("    .info .body {position: relative;overflow: hidden;}\r\n");
      out.write("    .info .desc {position: relative;margin: 13px 0 0 90px;height: 75px;}\r\n");
      out.write("    .desc .ellipsis {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;}\r\n");
      out.write("    .desc .jibun {font-size: 11px;color: #888;margin-top: -2px;}\r\n");
      out.write("    .info .img {position: absolute;top: 6px;left: 5px;width: 73px;height: 71px;border: 1px solid #ddd;color: #888;overflow: hidden;}\r\n");
      out.write("    .info:after {content: '';position: absolute;margin-left: -12px;left: 50%;bottom: 0;width: 22px;height: 12px;background: url('https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/vertex_white.png')}\r\n");
      out.write("    .info .link {color: #5085BB;}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"map\" style=\"width: 750px; height: 350px;\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<script\r\n");
      out.write("\t\tsrc=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=a17f98afa9ca291cceb19b84cb97d30f\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\tvar mapContainer = document.getElementById('map'),\r\n");
      out.write("    mapOption = { \r\n");
      out.write("        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("        level: 3 // 지도의 확대 레벨\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("<!-- 다중마커 포지션 지정-->\r\n");
      out.write("var positions = [\r\n");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("];\r\n");
      out.write("<!-- 다중마커 생성 -->\r\n");
      out.write("for (var i = 0; i < positions.length; i ++) {\r\n");
      out.write("    // 마커를 생성합니다\r\n");
      out.write("    var data = positions[i];\r\n");
      out.write("    displayMarker1(data);\r\n");
      out.write(" \r\n");
      out.write("}\r\n");
      out.write("function displayMarker1(data){\r\n");
      out.write("\tvar marker = new kakao.maps.Marker({\r\n");
      out.write("        map: map, // 마커를 표시할 지도\r\n");
      out.write("        position: positions[i].latlng // 마커의 위치\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    // 마커에 표시할 인포윈도우를 생성합니다 \r\n");
      out.write("\r\n");
      out.write("    var overlay = new kakao.maps.CustomOverlay({\r\n");
      out.write("    \ttitle: positions[i].title,\r\n");
      out.write("\t    content: positions[i].content,\r\n");
      out.write("\t    map: null,\r\n");
      out.write("\t    position: marker.getPosition()       \r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("    var content = document.createElement('div');\r\n");
      out.write("    content.innerHTML =  positions[i].content;\r\n");
      out.write("    content.style.cssText = 'background: white; border: 1px solid black';\r\n");
      out.write("    \r\n");
      out.write("    var closeBtn = document.createElement('button');\r\n");
      out.write("    closeBtn.innerHTML = '닫기';\r\n");
      out.write("    closeBtn.onclick = function () {\r\n");
      out.write("        overlay.setMap(null);\r\n");
      out.write("    };\r\n");
      out.write("    content.appendChild(closeBtn);\r\n");
      out.write("    overlay.setContent(content);\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t // 마커에 클릭이벤트를 등록합니다\r\n");
      out.write("\r\n");
      out.write("\t kakao.maps.event.addListener(marker, 'click', makeClick(map, marker, overlay));\r\n");
      out.write("}\r\n");
      out.write("<!-- 생성된 인포윈도우를 저장하기위한 배열 -->\r\n");
      out.write("var openmarkers = [];\r\n");
      out.write("<!-- GPS -->\r\n");
      out.write("if (navigator.geolocation) {\r\n");
      out.write("    \r\n");
      out.write("    // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n");
      out.write("    navigator.geolocation.getCurrentPosition(function(position) {\r\n");
      out.write("        \r\n");
      out.write("        var lat = position.coords.latitude, // 위도\r\n");
      out.write("            lon = position.coords.longitude; // 경도\r\n");
      out.write("        \r\n");
      out.write("        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n");
      out.write("            message = '<div style=\"padding:5px;\">현재 위치</div>'; // 인포윈도우에 표시될 내용입니다\r\n");
      out.write("        \r\n");
      out.write("        // 마커와 인포윈도우를 표시합니다\r\n");
      out.write("        displayMarker(locPosition, message);\r\n");
      out.write("            \r\n");
      out.write("      });\r\n");
      out.write("    \r\n");
      out.write("} else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n");
      out.write("    \r\n");
      out.write("    var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    \r\n");
      out.write("        message = 'geolocation을 사용할수 없어요..'\r\n");
      out.write("        \r\n");
      out.write("    displayMarker(locPosition, message);\r\n");
      out.write("}\r\n");
      out.write("var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"; // 마커이미지의 주소입니다    \r\n");
      out.write("var imageSize = new kakao.maps.Size(24, 35); // 마커이미지의 크기입니다\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)\r\n");
      out.write("// 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n");
      out.write("\r\n");
      out.write("<!-- 다중마커 생성 및 열린마커 인포윈도우 닫기-->\r\n");
      out.write(" function makeClick(map,marker,overlay){\r\n");
      out.write("\t return function(){\r\n");
      out.write("\t\t openmarkers.forEach(function(each) { each.setMap(null); });\r\n");
      out.write("\t\t overlay.setMap(map);\r\n");
      out.write("\t\t openmarkers.push(overlay);\r\n");
      out.write("\t }\r\n");
      out.write(" }\r\n");
      out.write(" function closeOverlay() {\r\n");
      out.write("\t return function(){\r\n");
      out.write("\t\t openmarkers.forEach(function(each) { each.setMap(null); });\r\n");
      out.write("\t\t overlay.setMap(null);\r\n");
      out.write("\t\t openmarkers.push(overlay);\r\n");
      out.write("\t }\r\n");
      out.write("}\r\n");
      out.write(" <!--GPS 이미지 마커 생성 -->\r\n");
      out.write(" function displayMarker(locPosition, message) {\r\n");
      out.write("\r\n");
      out.write("\t    // 마커를 생성합니다\r\n");
      out.write("\t    var marker = new kakao.maps.Marker({  \r\n");
      out.write("\t        map: map, \r\n");
      out.write("\t        position: locPosition,\r\n");
      out.write("\t        image: markerImage\r\n");
      out.write("\t    }); \r\n");
      out.write("\t    \r\n");
      out.write("\t    var iwContent = message, // 인포윈도우에 표시할 내용\r\n");
      out.write("\t        iwRemoveable = true;\r\n");
      out.write("\r\n");
      out.write("\t    // 인포윈도우를 생성합니다\r\n");
      out.write("\t    var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t        content : iwContent,\r\n");
      out.write("\t        removable : iwRemoveable\r\n");
      out.write("\t    });\r\n");
      out.write("\t    \r\n");
      out.write("\t    // 인포윈도우를 마커위에 표시합니다 \r\n");
      out.write("\t    infowindow.open(map, marker);\r\n");
      out.write("\t    openmarkers.push(infowindow);\r\n");
      out.write("\t    // 지도 중심좌표를 접속위치로 변경합니다\r\n");
      out.write("\t    map.setCenter(locPosition);      \r\n");
      out.write("\t}    \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\t</script>\r\n");
      out.write("\t<img\r\n");
      out.write("\t\tsrc=\"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\">현재위치\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<!-- 바 차트 -->\r\n");
      out.write("\t<div style=\"width: 75%\">\r\n");
      out.write("\t\t<canvas id=\"canvas\"></canvas>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("var randomColorFactor = function(){\r\n");
      out.write("\treturn Math.round(Math.random() * 255);\r\n");
      out.write("}\r\n");
      out.write("var randomColor = function(opacity){\r\n");
      out.write("\treturn \"rgba(\"+randomColorFactor()+\",\"\r\n");
      out.write("\t\t\t+ randomColorFactor() +\",\"\r\n");
      out.write("\t\t\t+ randomColorFactor() +\",\"\r\n");
      out.write("\t\t\t+ (opacity || '.3')+\")\";\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var randomColor = function(opacity){\r\n");
      out.write("\treturn \"rgba(\"+randomColorFactor()+\",\"\r\n");
      out.write("\t\t\t+ randomColorFactor() +\",\"\r\n");
      out.write("\t\t\t+ randomColorFactor() +\",\"\r\n");
      out.write("\t\t\t+ (opacity || '.3')+\")\";\r\n");
      out.write("};\r\n");
      out.write("var barChartData = {\r\n");
      out.write("\t\tlabels : [");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("],\r\n");
      out.write("\t\tdatasets : [\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t]\r\n");
      out.write("}\r\n");
      out.write("window.onload=function(){\r\n");
      out.write("\tvar ctx = document.getElementById(\"canvas\").getContext(\"2d\")\r\n");
      out.write("\twindow.myBar = new Chart(ctx,{\r\n");
      out.write("\t\ttype : 'bar',\r\n");
      out.write("\t\tdata : barChartData,\r\n");
      out.write("\t\toptions : {\r\n");
      out.write("\t\t\tresponsive : true, //반응형 웹형태로\r\n");
      out.write("\t\t\t//top,left,right,bottom\r\n");
      out.write("\t\t\tlegend : {position : 'top'}, //범례의 위치 지정\r\n");
      out.write("\t\t\ttitle : {\r\n");
      out.write("\t\t\t\tdisplay : true,\r\n");
      out.write("\t\t\t\ttext : '막대 그래프 연습'\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/view/user/main.jsp(48,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("a");
      // /WEB-INF/view/user/main.jsp(48,0) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setBegin(0);
      // /WEB-INF/view/user/main.jsp(48,0) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:length(list)-1}", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).intValue());
      // /WEB-INF/view/user/main.jsp(48,0) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setStep(4);
      // /WEB-INF/view/user/main.jsp(48,0) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("stat");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t{\t\t\r\n");
            out.write("\t\ttitle :'dd',\r\n");
            out.write("\t\tcontent:'<div class=\"wrap\">'+\r\n");
            out.write("\t\t'<div class=\"info\">'+\r\n");
            out.write("\t\t'<div class=\"title\">' + \r\n");
            out.write("\t\t'");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.get(a)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("'+\r\n");
            out.write("\t\t'</div>\t'+\r\n");
            out.write("\t\t'<div class=\"body\">'+\r\n");
            out.write("\t\t'<div class=\"dec\">'+\r\n");
            out.write("\t\t'<div class=\"ellipsis\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.get(a+1)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</div>'+\r\n");
            out.write("\t\t'</div>'+\r\n");
            out.write("\t\t'</div>'+\r\n");
            out.write("\t\t'</div>'+\r\n");
            out.write("\t\t'</div>',\r\n");
            out.write("\t\tlatlng: new kakao.maps.LatLng(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.get(a+2)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(',');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.get(a+3)}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\r\n");
            out.write("\t},\r\n");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fstep_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/view/user/main.jsp(213,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("m");
      // /WEB-INF/view/user/main.jsp(213,12) name = begin type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setBegin(0);
      // /WEB-INF/view/user/main.jsp(213,12) name = end type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setEnd(((java.lang.Integer) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fn:length(listmap)-1}", int.class, (javax.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0)).intValue());
      // /WEB-INF/view/user/main.jsp(213,12) name = step type = int reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setStep(1);
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${listmap.get(m).get(\"date\")}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write(',');
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fstep_005fend_005fbegin.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f2 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f2_reused = false;
    try {
      _jspx_th_c_005fforEach_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f2.setParent(null);
      // /WEB-INF/view/user/main.jsp(216,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setVar("m");
      // /WEB-INF/view/user/main.jsp(216,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f2.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/user/main.jsp(216,12) '${list1}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list1}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f2 = _jspx_th_c_005fforEach_005f2.doStartTag();
        if (_jspx_eval_c_005fforEach_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t{\r\n");
            out.write("\t\t\tlabel : \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("\t\t\tbackgroundColor:randomColor(1),\r\n");
            out.write("\t\t\tborderWidth : 1,\r\n");
            out.write("\t\t\tdata:[");
            if (_jspx_meth_c_005fforEach_005f3(_jspx_th_c_005fforEach_005f2, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f2))
              return true;
            out.write("]\t\t\t\r\n");
            out.write("\t\t},\r\n");
            out.write("\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f2);
      _jspx_th_c_005fforEach_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f2)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f3 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f3_reused = false;
    try {
      _jspx_th_c_005fforEach_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f2);
      // /WEB-INF/view/user/main.jsp(221,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setVar("map");
      // /WEB-INF/view/user/main.jsp(221,9) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f3.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/view/user/main.jsp(221,9) '${listmap}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${listmap}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f3 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f3 = _jspx_th_c_005fforEach_005f3.doStartTag();
        if (_jspx_eval_c_005fforEach_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map[m]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f3.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f3[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f3.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f3.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f3);
      _jspx_th_c_005fforEach_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f3_reused);
    }
    return false;
  }
}
